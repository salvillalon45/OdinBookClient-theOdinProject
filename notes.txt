https://youtu.be/Mf8eqNrcZDw
Use ES7 Object Rest Operator to Omit Properties
https://stackoverflow.com/questions/37838778/destructuring-object-and-ignore-one-of-the-results

Use React Context
https://blog.openreplay.com/using-react-context-api-with-gatsby
https://medium.com/swlh/gatsbys-global-state-management-with-react-s-context-5f8064e93351
Using hooks no need for <UserStateContext.Consumer>

To remove warning for images type
https://stackoverflow.com/questions/52759220/importing-images-in-typescript-react-cannot-find-module
{    
   "compilerOptions": {
        "typeRoots" : ["node_modules/@types", "src/types"]
    }
}

Learned that if I want to do a nested loop and get a value and return it. It will not work with map
I need to use a forEach
https://stackoverflow.com/questions/51743372/javascript-nested-map-returning-multiple-arrays
```
If you want a flat result, this isn't a use case for map. The simple solution is just to use an array you close over and push to:

const result = [];
firstData.forEach(first => {
    return first.secondData.forEach(second => {
        result.push(...second.thirdData.filter(third => third.value === 'whatever'));
    });
});
```

Created my first hook that fetches data. Really like how it great it is to use.
With swr, I no longer need to use useEffect. I can use this hook at the top parent level or 
child level components. (More here https://swr.vercel.app/docs/getting-started#example). Although we can avoid passing props 
using Context, there's still the dynamic content problem: components inside the 
page content can be dynamic, and the top level component might not know what 
data will be needed by its child components.
https://swr.vercel.app/docs/getting-started#make-it-reusable
function usePosts(
	userid: string,
	authorization: string
): UsePostHookReturnType {
	const { data, error: errors } = useSWR(
		[`${process.env.GATSBY_ODIN_BOOK}/posts/${userid}`, authorization],
		fetcher
	);

	return {
		allPosts: data,
		isLoading: !errors && !data,
		isError: errors
	};
}

How to refresh data with SWR
https://benborgers.com/posts/swr-refresh
